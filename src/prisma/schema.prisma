// @see https://pris.ly/d/prisma-schema
// Formatted with "npx prisma format".

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("BOT_DATABASE_URL")
}

model Games {
  // Fields
  id              Int      @id @default(autoincrement()) /// The unique ID of the game.
  created         DateTime @default(now()) /// The time when the game was created.
  updated         DateTime @updatedAt /// The time when the game was updated.
  parentGameId    Int /// The unique ID of an existing game that this one is based on.
  authorUserId    String /// The unique ID of the Discord user who created the game.
  guildId         String /// The unique ID of the Discord guild where the game was created.
  message         String /// The authorUserId's Discord message that created the game.
  command         String /// The Discord command responsible for running this game.
  waitingOnUserId String /// The unique ID of the Discord user whose move it is.
  ended           Boolean  @default(false) /// Whether the game has ended.
  state           String /// The JSON representing the current game state.

  // Relations
  players GamePlayers[]

  // Attributes
  @@map("games")
}

model Users {
  // Fields
  id String @id

  // Relations
  games GamePlayers[]

  // Attributes
  @@map("users")
}

model GamePlayers {
  // Fields
  gameId Int
  userId String

  // Relations
  game   Games @relation(fields: [gameId], references: [id])
  player Users @relation(fields: [userId], references: [id])

  // Attributes
  @@id([gameId, userId])
  @@map("games_users")
}
