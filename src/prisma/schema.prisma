// @see https://pris.ly/d/prisma-schema
// Formatted with "npx prisma format".

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("BOT_DATABASE_URL")
}

model Game {
  // Fields
  id              Int      @id @default(autoincrement()) /// The unique ID of the game.
  created         DateTime @default(now()) /// The time when the game was created.
  updated         DateTime @updatedAt /// The time when the game was updated.
  guildId         String /// The unique ID of the Discord guild where the game was created.
  channelId       String /// The unique ID of the Discord channel where the game was created.
  authorId        String /// The unique ID of the Discord user who created the game.
  message         String /// The authorUserId's Discord message that created the game.
  command         String /// The Discord command responsible for running this game.
  currentPlayerId String /// The unique ID of the Discord user whose move it is.
  ended           Boolean  @default(false) /// Whether the game has ended.
  state           String   @default("{}") /// The JSON representing the current game state.

  // Relations
  players GamePlayer[]

  // Attributes
  @@map("games")
}

model User {
  // Fields
  id String @id /// The unique ID of the Discord user who created the game.

  // Relations
  games GamePlayer[]

  // Attributes
  @@map("users")
}

model GamePlayer {
  // Fields
  gameId Int /// The unique ID of the game stored in the games table.
  userId String /// The unique ID of the Discord user who created the game.

  // Relations
  game   Game @relation(fields: [gameId], references: [id])
  player User @relation(fields: [userId], references: [id])

  // Attributes
  @@id([gameId, userId])
  @@map("games_users")
}
